Any line that starts with a '#' is a comment and lines not starting with them are commands to enter into the terminal

###############################
##         bandit0           ##
###############################

# ssh into the host given
ssh bandit0@bandit.labs.overthewire.org -p 2220
# use bandit0 to login
# use ls to see the files in the directory
ls
# only one "readme", cat this file and use the output to login to the next level
cat readme

###############################
##         bandit1           ##
###############################

# using ls you can see there is only one file '-'
# to output this file you have to use special characters
cat ./-

###############################
##         bandit2           ##
###############################

# using ls you can see there is only one file
# however it has spaces in the name
# using auto complete you can easily get the correct input

cat spaces\ in\ the\ filename

###############################
##         bandit3           ##
###############################

# cd in inhere directory
cd inhere
# running ls comes up with nothing
# run ls with all flag
ls -a
# cat .hidden file
cat .hidden

###############################
##         bandit4           ##
###############################

# cd into inhere
cd inhere
# now we need to locate a file that is human readableq
# based on the file's manual we can see that by using file to see what kind of file we are looking at
# we can use the wild card convention to check all the files in the current directory
file ./*
# based on the above commands results we can see that -file07 contains ascii text
# cat -file07
cat ./-file07

###############################
##         bandit5           ##
###############################

cd inhere
ls
# after listing the contents we see that there are a few directories
# you could manually look into each one but there is a much easier way
# the find command helps you look for files and directories that match the specification you give it
# -type allows one to specify the type of item you are looking for (d/f)
# 'd' looks for directories
# 'f' looks for files
# -size specifies the size of the file/directory 
# 'c' for bytes
find -type f - size 1033c ! -executable
# running this we see the file we want is .file2 located in maybehere07
cat ./maybehere07/.file2

###############################
##         bandit6           ##
###############################
# we are told that the file is located: 
# somewhere on the server
# was made by user bandit7
# is part of group bandit6
# and is 33 bytes
# using our knowledge of bandit5 and /dev/null we should be able to find this file fairly simply

find / -user bandit7 -group bandit6 -size 33c 2>/dev/null
# we see that the file we want is in /var/lib/dpkg/info/bandit7.password
cat /var/lib/dpkg/info/bandit7.password

###############################
##         bandit7           ##
###############################

# For this challenge we are told that the key is located next to millionth
# You could scan the file manually but the grep command is much easier
# grep will search a given file for lines that contain a match to the given pattern

grep millionth data.text

###############################
##         bandit8           ##
###############################

# For this we need to find a unique line in a large file
# We will need to use the pipe operator '|' to have to work efficiently 
# First we need to output a file, then sort it, then look for unique lines
cat data.txt | sort | uniq -u

###############################
##         bandit9           ##
###############################

# We need to find a line in the file that starts with an '=' sign and is a human readable string
# First we need to pull all the strings out of the file, and then we need to look for the equals sign

strings data.txt | grep =
# From the output we see there are a few lines but only one line truly looks like the passwords we have gotten before
